def move(grid, op, n): 
    sample_id, direc, rep = op[0], op[1], op[2]
    if rep < 1:
        return 1
    coord = (0, 0)
    found = 0
    for counti, _ in enumerate(range(n)):
        for countj, j in enumerate(range(n)):
            if grid[counti][countj] == sample_id:
                found = 1
                coord = (counti, countj)
    if found == 0:
        return 2
    if direc == 'U':
        for _ in range(1,rep+1):
            if coord[0] - _ < 0:
                return 4
            if grid[coord[0] - _][coord[1]] != '.':
                return 3
        grid[coord[0] - rep][coord[1]] = grid[coord[0]][coord[1]]
        grid[coord[0]][coord[1]] = '.'
        return 0
    if direc == 'D':
        for _ in range(1,rep+1):
            if coord[0] + _ >= n:
                return 4
            if grid[coord[0] + _][coord[1]] != '.':
                return 3
        grid[coord[0] + rep][coord[1]] = grid[coord[0]][coord[1]]
        grid[coord[0]][coord[1]] = '.'
        return 0
    if direc == 'L':
        for _ in range(1,rep+1):
            if coord[1] - _ < 0:
                return 4
            if grid[coord[0]][coord[1] - _] != '.':
                return 3
        grid[coord[0]][coord[1] - rep] = grid[coord[0]][coord[1]]
        grid[coord[0]][coord[1]] = '.'
        return 0
    if direc == 'R':
        for _ in range(1,rep+1):
            if coord[1] + _ >= n:
                return 4
            if grid[coord[0]][coord[1] + _] != '.':
                return 3
        grid[coord[0]][coord[1] + rep] = grid[coord[0]][coord[1]]
        grid[coord[0]][coord[1]] = '.'
        return 0

def print_pretty_grid(grid, wf):
    for i in grid:
        wf.write("".join(i) + "\n")

with open('../input/input17.txt') as f:
    r = f.readline().split(' ')
    n, m = int(r[0]), int(r[1])
    grid = [list(f.readline().strip()) for _ in range(n)]
    real_moves = []
    for _ in range(m):
        fake_move = f.readline().strip().split(' ')
        real_moves.append((fake_move[0], fake_move[1], int(fake_move[2])))

with open('../input/output17.txt', 'w') as wf:   
    for i in real_moves:
        wf.write(str(move(grid, i, n)) + "\n")
    print_pretty_grid(grid, wf)


    
    
    
    
    
